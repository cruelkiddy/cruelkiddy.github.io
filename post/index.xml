<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Mainroad</title>
    <link>/post/</link>
    <description>Recent content in Posts on Mainroad</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 19 Nov 2019 11:33:31 +0800</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>1.5</title>
      <link>/post/1.5/</link>
      <pubDate>Tue, 19 Nov 2019 11:33:31 +0800</pubDate>
      
      <guid>/post/1.5/</guid>
      <description>读§1.5 （CV课变成了我的概率课
（一周过去了，续更
####独立性
考察事件\(A\) 的概率和在\(B\)发生时\(A\)的概率是否相等（\(B\)的出现对\(A\)出现的概率是否有影响）:
\(P(A)=P(A|B)\) ?
如果两个概率相等，就有： \( P(AB)=P(A)P(B) \) 就由上式定义事件\(A\)、\(B\)相互独立
定理：如果\((A,B)\)相互独立，那么三对事件\((A,\bar B)，(\bar A,B)，(\bar A,\bar B)\)分别也是相互独立的.
上面的定理证明用到了概率的可加性，现在意识到概率的可加性有些像线性的可加性
计算概率的差分方程法 以随机徘徊为例
用全概率公式描述一次移动位置的过程 \( q_z=pq_{z+1}+qq_{z-1} \; (0 再给出边界条件 \( q_0 =1,q_a=0 \)
下面就是解差分方程的事情，不再讨论
（To be continued......</description>
    </item>
    
    <item>
      <title>1.4</title>
      <link>/post/1.4/</link>
      <pubDate>Wed, 06 Nov 2019 10:55:29 +0800</pubDate>
      
      <guid>/post/1.4/</guid>
      <description>读§1.4 （坚持写读书笔记越来越困难了，空闲时间不再那么多了，螳臂当车？
这一节讲条件概率
动机 在实际问题中，除了要知道事件\(A\) 的概率\(P(A)\) 外，有时还需要知道在事件\(B\) 已出现的条件下，事件\(A\) 出现的条件概率\(P(A|B)\) 是不同的。
定义 依然是受频率的启发，在事件 \(B\) 发生的情况下，事件\(A\) 发生的频率\(F_n(A|B)= \frac{F_n(AB)}{F_n(B)}\) 。我们在定义条件概率时用相同的形式\(P(A|B)=\frac{P(AB)}{P(B)}\) ，当然这个定义是在之前建立起的概率空间的体系之下讨论的。
性质 上面定义出的条件概率也是概率，因此之前所有概率满足的性质和结果条件概率都适用
有关条件概率的三定理 （公式就不写出来了，懒😄
概率的乘法定理 这个定理说：多个事件同时发生的概率等于给这些事件排好序，一件一件发生的概率
这很符合常识，给比较混乱的多个事件排序也很符合人的认知习惯
全概率公式 全概率公式说：我先把\(\Omega\) 划分成有穷或可列个不相容的事件\(H_n\)（大意是这样，可列个的话是极限意义的划分这些事件的并概率为1），接着我描述一个事件\(A\) 的概率时引入事件\(H_n\)， \(A\)发生的概率等于在每个\(H_n\) 的基础上发生的概率。
这有点分类的感觉，也很符合人的认知
贝叶斯公式 （这个公式似乎是在全概率公式的基础上得到的。
这个定理也引入了划分\(\Omega\) 的事件列\(H_n\) ，他想研究一个结果\(A\)发生时，同时发生的\(H_n\)是谁的问题。
证明就用了条件概率的定义和全概率公式
这个东西好像用在机器学习学习的分类里面，\(H_n\) 是一列不同的类别，经过一系列操作\(A\) 发生了，到底是哪一类呢？看看公式右边，如果想要计算，需要知道各个类发生的概率、各个类发生时\(A\) 发生的概率
可能以后会有更深的理解吧
（To be continued......</description>
    </item>
    
    <item>
      <title>1.2 &amp; 1.3</title>
      <link>/post/1.2/</link>
      <pubDate>Tue, 22 Oct 2019 08:43:14 +0800</pubDate>
      
      <guid>/post/1.2/</guid>
      <description>读§1.2 这一节介绍了古典型概率的一些模型和计算技巧，涉及一些排列组合的知识。由于我读此书的目的不是解题，这一节极略读。
首先推广了随机试验，提出n次复合随机试验的概念。需要注意的是，这n次实验是有位置次序的。
另外，需要注意的是：古典型概率的定义方式，每个基本事件概率的大小相等。
读§1.3 这一节介绍了概率的公理化定义✌️
事件空间
\(\cal{F}\)是\(\Omega\)上的\(\sigma\)-代数
这样定义保证了如何折腾（做运算）事件，事件仍然是事件。
事件空间并没有穷尽所有的可能，一方面我们可能并不关心某些事件。
另一方面，有些事件我们研究起来十分困难。
概率测度
概率测度是定义在\(\cal{F}\)上的满足三条性质（当然，这三条性质能推出更多的性质）的实值集函数
这样定义或许受到了频率性质的启发。
可以看到，很大范围的“概率”能纳入这个体系中：古典型概率、几何形概率
概率的性质
1.基本性质（略）
2.连续性：
容易发现，连续性是象在原象的某种极限运动中的某种极限行为
概率在事件单调地极限运动时就具有连续性
（To be continued</description>
    </item>
    
    <item>
      <title>1.1</title>
      <link>/post/1.1/</link>
      <pubDate>Wed, 16 Oct 2019 18:01:36 +0800</pubDate>
      
      <guid>/post/1.1/</guid>
      <description>我的前言 我认为我有充分的理由学习概率论。上次的compulsory期间，我借了一本精装的概率论书籍概率论基础及其应用/王梓坤文集 据说质量很高，因此这本书自然而然成了我“重修”概率论的参考书。我希望自己能坚持读完，并在此记一些笔记，一能督促自己的学习，二能总结出一些“自己想要的东西”。闲话少叙，这就开始了。
读前言 我不经常看书的前言（也不常看教材之外的书😄），但这本书包装如此精美，且是一本“文集”，我决定认真读书上的每一个字。前言讲了王梓坤先生读书科研的经历，和做出的种种贡献。王先生的投入之全心全意令人难以忽略。我能看到这样一个极其“单调”但是极其“伟大”的人。这可能就是一种balance吧，要想问心无愧地做出一些伟大的成果，就要牺牲一些东西 。当然先生也做了一些并不“单调”的工作：做校长、提议教师节、受任国家研究地震的预测……另外让我印象深刻的是他的“单调”是从一而终的（又开始成语误用了），即使在&amp;rdquo;文革&amp;rdquo;期间，也潜心关注数学的发展动态。能感受到王先生对于数学的坚定是超越政治、经济等等外界环境的。就像他自勉用的格言所说：
 &amp;ldquo;我尊重这样的人，他心怀博大，待人宽厚；朝观剑舞，夕临秋水，观剑以励志奋进，读庄以淡化世纷；公而忘私，勤于职守；力求无负与前人，无罪于今人，无愧于后人。&amp;rdquo;
 读§1.1 这一节联系实际介绍了一些基础概念
（随机）事件： （我的常识是）之所以随机是因为给出的条件不全，即若给出充足的条件，所有的事件都是可以给出或必然或不可能的判断的。我学概率的期待之一，其实是希望概率论能告诉我这种常识的简单和局限。
事件空间 这里有一个小的断言：所有的事件都是$$\Omega$$ 的子集。同时可以说，所有事件都是由基本事件的运算产生的。这个statement并不在我的常识中，我没有意识到所有可能出现的结果其实是可以预见的。
概率： 概率的实际意义是衡量一个事件发生可能性大小的数字，他在不同的模型中显然可以不同。（认识到这一点算是一个收获。）在数学的意义上，他是一种”测度“，是推广”积分“时产生的一种”工具“。
频率： 定义了频率，指出频率和概率有关。指出今后可以证明：在相当广泛的情形下，概率的极限就是概率。
（我不太懂这里的概率是不是要说明一下是怎么定义的，还是说在“相当广泛的情形下”，概率的定义是唯一的？
（读过§1.3就可以理解了，这里并不在意概率具体是如何定义的，因为所有符合概率定义的实值集函数都满足
杂谈： 这本书在定义事件时没有一上来就引入”集合“，而是在定义之后提到这和”集合“密切相关，因此引入了集合来表示事件，我认为这很自然，不像某些书那么突兀。
书中提到复杂概念甲由一个稍简单的概念乙定义，乙由更简单的丙定义，一定会遇到某个定义或概念无法再解释。这并不用慌张，这时就用不太严谨的描述罢了。
很多人讨厌数学繁多啰嗦的定义，但仔细分析这些基本的定义，常常能重新形成一些很底层的概念。
我正尝试用这种方法重塑三观。
(To be continued……)</description>
    </item>
    
    <item>
      <title>Untitled</title>
      <link>/post/untitled/</link>
      <pubDate>Sat, 12 Oct 2019 22:33:25 +0800</pubDate>
      
      <guid>/post/untitled/</guid>
      <description>恐怕这一篇要写成日记了。
今天参加了外研社杯英语写作和阅读竞赛的网络初赛。让人惊喜，题目出得十分有趣。写作第一篇议论文直戳我的痛点：如何看待选课人数太少导致的课程取消问题。我可能有些跑题，不知不觉将问题转换成大学是科研机构，应该更重视科研。（看起来没有什么逻辑了）不论如何，洋洋洒洒最终写了500多字。第二题有些像在Quora上答题，挺有代入感的。
阅读就更有趣了，出现了很多我没见过的观点。一篇文章提到了一种gig economy(零工经济)。公司按照项目组招人，一个项目结项大家散伙，下一个项目重新招人。如果有机会我挺想试试这种模式，很有一种神偷说“干完这票大的就退休”的感觉。😄
一篇短文提出“生理上营养的缺乏导致抑郁”的观点，我开始怀疑自己是这种情况。
一篇短文提出朋友是make出来的（可执行文件也是😄）而不是find出来的（可执行文件也是😄）。并且大家都很nice，constant contact就会成为好朋友。这条很有指导意义，混脸熟就是这意思。
记忆力有点差，想不起来别的了&amp;hellip;
晚上和妈妈出去散步聊了不少，聊到一些有趣的事：
心理咨询像是唤醒一些尘封的记忆，我们可能在过去某个时刻做出了某个决定，或者产生了某种行为。随着时间的流逝，我们可能忘记了为什么会产生这种行为，但是行为本身却保留了下来。当这种行为产生了困扰，心理咨询师会试图让你想起或者找到一个最初的原因。
我们在对很多问题归因的时候会忽视其背后的“概率”因素。很多事情不是板上钉钉的，需要引入“概率”描述的更加清楚。（概率没学好需要补，不只是数学，还能提炼一些哲学思想）
先别想那么远，影响了美好的当下。
接上条，我这就买琴。😄
交朋友没那么难。拿一部分精力放在社交上面。
想不起来了</description>
    </item>
    
    <item>
      <title>直方图的强迫</title>
      <link>/post/compulsory/</link>
      <pubDate>Tue, 08 Oct 2019 21:24:50 +0800</pubDate>
      
      <guid>/post/compulsory/</guid>
      <description>背景 今天《数字图像处理》课上讲了直方图均衡，由于种种原因，我产生了一种强迫性的行为：我要尽可能严谨地讲清楚直方图均衡的来龙去脉，在做到这点之前，我十分痛苦。下面讲的就是我强迫性的行为所带来的“收获”
我的强迫  直方图的概念  直方图
什么是直方图均衡，为何要这样做  直方图均衡是一种图像“变换”，直观的看，变换后图像的直方图变成了一个在整个定义域上常函数。维基说：
 这种方法通常用来增加许多图像的全局对比度，尤其是当图像的有用数据的对比度相当接近的时候。通过这种方法，亮度可以更好地在直方图上分布。这样就可以用于增强局部的对比度而不影响整体的对比度，直方图均衡化通过有效地扩展常用的亮度来实现这种功能。
这种方法对于背景和前景都太亮或者太暗的图像非常有用，这种方法尤其是可以带来X光图像中更好的骨骼结构显示以及曝光过度或者曝光不足照片中更好的细节。这种方法的一个主要优势是它是一个相当直观的技术并且是可逆操作，如果已知均衡化函数，那么就可以恢复原始的直方图，并且计算量也不大。这种方法的一个缺点是它对处理的数据不加选择，它可能会增加背景噪声的对比度并且降低有用信号的对比度。
 至于直方图是如何达到这种效果的，在比较清楚地了解了其背后的原理后再进行讨论。总之，我们要做的是找到一个变换 \(T(x)\) 使得变换后的\(T(image)\) 的直方图是一个常函数\(f(rank) = K\) , \(\forall\)\(rank\) \(\in\) \(RankDomain\)
如何找到这样的一个变换\(T(x)\)  根据一些图像处理的知识，变换\(T(x)\) 需要满足以下一些条件：
（i）\(T(x)\)是广义单调增加的。这保证像素之间灰度级的大小关系保持不变。
下面引入概率论的思想来求这个变换。将像素点\(i\)的灰度值视为一个随机变量\(\xi_i\)，
\[\xi_i \coprod \xi_j ， \forall i\ne j ， i, j \in Image\]
定义概率\(P(\xi = k)\) = \(\frac{n_k}{n}\)
\(n_k\) \(:=\) 灰度为\(k\)的像素点的个数
\(n:=\) 图像总像素点个数
 弃更了，google到一篇很清楚的解释，数学也比较严谨在这里
会搜索是多么重要，\(Gan\)。
(提高hugo对markdown数学公式的支持请看这里)</description>
    </item>
    
    <item>
      <title>一家老北京</title>
      <link>/post/desheng/</link>
      <pubDate>Mon, 07 Oct 2019 18:58:19 +0800</pubDate>
      
      <guid>/post/desheng/</guid>
      <description>今天晚上在一个多次经过店门，但没有进去过的小店吃饭。
一进店就是很热情的招待：“您几位啊”
安排入座后拿来了破烂的菜单，菜单上的菜我大多没有吃过，但是看到标题“老北京小吃”也猜测出了大概是什么。
既然是老北京小吃，那就老北京到底吧！
我点了招牌肉饼、羊杂汤（我心目中的老北京，可能因为之前不远万里绕进胡同吃过一次羊肉汤）、炸灌肠
味道其实也就比食堂好一点（严重怀疑是我点的菜不是招牌），但是这家店的氛围让人耳目一新。
店的西北角坐着三个北京爷们儿，大声嚷嚷着聊天
西南角两个老人，听口音也是纯种北京人。
刚进来的几个人（也是老北京）直接走到前台“给我约二两牛肉，还要点什么，回头问同行的人，xx毛豆，再给来点酒“（这么快就忘了具体是怎么说的了）然后掌柜的（自然而然的想起了这个词）就拿刀开始切肉。我脑中立刻联想到了孔乙己，想到了咸亨酒店（可能因为我对过去的酒店几乎没有其他印象了）想到可能很久之前的老北京们来这里吃饭喝酒，大声聊天。
吃完饭店里仅有的一位服务员和老板娘热情的说“慢点”。
对了，店里除了我没人在看手机
👇是卖肉的桌子
虽然来了饭店，但是不去研究当下的饭是如何的好吃或是难吃，而去想过去的情形，感受不同的氛围。这是一种人文的感觉吗？
👇不起眼的小店</description>
    </item>
    
    <item>
      <title>CleverIDE</title>
      <link>/post/cleveride/</link>
      <pubDate>Sun, 06 Oct 2019 22:38:24 +0800</pubDate>
      
      <guid>/post/cleveride/</guid>
      <description>今天跑安卓的第一个例程：ToyVpn。这是一个很有年代感的例子，最近版本的SDK的Sample里已经没了它的踪影。因此环境的配置是一个难题，从gradle开始就出现了版本问题。
然而 这些问题都极其轻松的得到了解决，得益于十分智能的IDE——AndroidStudio
AndroidStudio不仅给出错误原因，在原因下面就给出了一键解决的办法。就像过去皇宫里侍奉的太监，只要你点点头，一切都安排好了。
虽然这对于我这样的初学者十分友善，
然而 那些吃经验的程序员，还能吃多久呢？
（怪不得很多大佬去做人工智能了，未来很多工作者真的会被机器取代）
（怪不得我院变成人工智能学院了😄）</description>
    </item>
    
    <item>
      <title>活着？</title>
      <link>/post/perseverance/</link>
      <pubDate>Fri, 04 Oct 2019 20:31:02 +0800</pubDate>
      
      <guid>/post/perseverance/</guid>
      <description>十一放假四天了，昏昏沉沉的，什么也不想做，感觉不到还活着。
今天我才意识到事情不太对，开始在网上对照自己的“症状”判断自己得了什么病。胃？肝？心理？最终也没能“确诊”。大概根据中医模糊的理论猜测是这段时间消化能力比较弱，有点”营养不良“的意思，胃不舒服同时影响了心理和睡眠💤。
有意思的是我在”阴虚“的调养方法里看到”坚持运动“一项。确实啊，我这一个学期运动的次数屈指可数。我就是这么一个冲动的人，我立刻就穿鞋出去跑步了🏃
跑跑停停，跑到了一条没有车驶过的路上
耳机里放的是很有节奏感又不吵闹的一段人声轻吟：dililidi （3:00-），脚下的GT-2000反馈回来的软软的感觉，我终于感觉到我还活着了，我越跑越快。</description>
    </item>
    
    <item>
      <title>VpnService使用指南</title>
      <link>/post/vpnservice/</link>
      <pubDate>Thu, 03 Oct 2019 16:55:52 +0800</pubDate>
      
      <guid>/post/vpnservice/</guid>
      <description>什么是VPN Service VPN Service 是安卓提供给开发者的用户级的VPN服务的接口（user level interface），它将复杂的网络配置封装起来，开发者只需考虑和远端服务器的交互。总的来说，VPN Service创建了一个虚拟网卡（TUN），返回给APP一个&amp;rdquo;文件描述符&amp;rdquo;（File descriptor），对文件描述符的读写操作对应数据包的收发。VPN Service的接口工作在IP层，所操作的数据包都是符合IP数据包格式的。
具体在开发APP时，VPN的连接由两部分构成：client &amp;amp; service
客户端的VPN连接 1、调用VpnService.prepare()
初始化方法，停止其他APP创建的VPN连接，并获得使用VpnService类其他方法的权力。如果已有初始化过的VPN连接，将返回null。下面的代码将开启VPN服务绑定到点击操作上。
public void onClick(View v) { Intent intent = VpnService.prepare(getApplicationContext()); if (intent != null) { startActivityForResult(intent, 0); } else { onActivityResult(0, RESULT_OK, null); } }  初始化完成后VPN服务通过调用startService开启。需要传入一个Intent类型的参数。
 An intent is an abstract description of an operation to be performed.
 protected void onActivityResult(int requestCode, int resultCode, Intent data) { if (resultCode == RESULT_OK) { Intent intent = new Intent(this, MyVpnService.</description>
    </item>
    
    <item>
      <title>梯子是怎么坚挺的</title>
      <link>/post/ladder/</link>
      <pubDate>Mon, 30 Sep 2019 23:11:55 +0800</pubDate>
      
      <guid>/post/ladder/</guid>
      <description>端口被墙？ 9/30/2019
8836端口突然上不去了，重启了几次ssserver服务：这样做的 没什么用，然后pip卸了重装，重写了配置文件，新加了8838端口，本计划用作guest端口。结果后来发现8836还是无法连通，反而8838把我带了出去。
有人说，是端口被墙了，真是神奇。
加混淆，改加密 10/3/2019
端口被封的越来越快，一个端口甚至用不了一天了。有人说可以试试加个插件，我按照他说的试了试，最终结果倒是很不错，昨天搭好的现在也没被封。配置的难度主要在客户端这里，mac之前的ss没有simple-obfs这个插件，一直连不上，最后下载github上的官方版本改了改才ok。</description>
    </item>
    
  </channel>
</rss>